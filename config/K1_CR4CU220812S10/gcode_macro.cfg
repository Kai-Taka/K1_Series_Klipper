# K1
# CreateDate: 2023/03/15
# history: 1. date: 2023.03.17
#             modify: [gcode_macro END_PRINT]
#          2. date: 2023.03.20
#             delete: [gcode_macro Qmode].printer_state
#          3. date: 2023.03.23
#             modify: [gcode_macro LOAD_MATERIAL]
#                     [gcode_macro QUIT_MATERIAL]


[gcode_macro PRINTER_PARAM]
variable_z_safe_pause: 0.0
variable_z_safe_g28: 3.0
variable_max_x_position: 220.0
variable_max_y_position: 220.0
variable_max_z_position: 250.0
variable_fans: 3
variable_auto_g29: 0
variable_fan0_min: 50
variable_fan1_min: 50
variable_fan2_min: 180
variable_fan2_speed: 0
gcode:

[gcode_macro AUTOTUNE_SHAPERS]
variable_autotune_shapers: 'ei'
gcode:

[gcode_macro LOAD_MATERIAL]
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E150 F180
  RESTORE_GCODE_STATE NAME=myMoveState

[gcode_macro QUIT_MATERIAL]
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  M109 S{printer.custom_macro.default_extruder_temp}
  G91
  G1 E20 F180
  G1 E-30 F180
  G1 E-50 F2000
  RESTORE_GCODE_STATE NAME=myMoveState

[gcode_macro Qmode]
variable_flag: 0
variable_accel: 0
variable_accel_to_decel: 0
variable_velocity: 0
variable_square_corner_velocity: 0
variable_pressure_advance:0.0
variable_fan0_value: 0.00
variable_fan1_value: 0.00
variable_fan2_value: 0.00
variable_speed_factor: 0
gcode:
  {% set printer_state = printer.print_stats.state %}
  {% if printer['gcode_macro Qmode'].flag|int == 0 %}
    {% if printer_state == "printing" or printer_state == "paused" %}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=accel VALUE={printer.toolhead.max_accel}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=accel_to_decel VALUE={printer.toolhead.max_accel_to_decel}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=velocity VALUE={printer.toolhead.max_velocity}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=square_corner_velocity VALUE={printer.toolhead.square_corner_velocity}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=pressure_advance VALUE={printer.extruder.pressure_advance}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=speed_factor VALUE={printer.gcode_move.speed_factor}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan0_value VALUE={printer['output_pin fan0'].value}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan1_value VALUE={printer['output_pin fan1'].value}
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=fan2_value VALUE={printer['output_pin fan2'].value}
      SET_TMC_FIELD STEPPER=stepper_x FIELD=en_spreadcycle VALUE=0
      SET_TMC_FIELD STEPPER=stepper_y FIELD=en_spreadcycle VALUE=0

      # Set Motion Parameters
      SET_VELOCITY_LIMIT ACCEL=5000
      SET_VELOCITY_LIMIT ACCEL_TO_DECEL=2500
      SET_VELOCITY_LIMIT VELOCITY=200
      SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
      SET_PRESSURE_ADVANCE ADVANCE=0.05
      M220 S50
      M106 P0 S80
      M106 P1 S0
      M106 P2 S0
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=flag VALUE=1
    {% endif %}
  {% endif %}

[gcode_macro Qmode_exit]
gcode:
  {% set printer_state = printer.print_stats.state %}
  {% if printer['gcode_macro Qmode'].flag|int == 1 %}
    {% if printer_state == "printing" or printer_state == "paused" %}
      SET_VELOCITY_LIMIT ACCEL={printer['gcode_macro Qmode'].accel}
      SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer['gcode_macro Qmode'].accel_to_decel}
      SET_VELOCITY_LIMIT VELOCITY={printer['gcode_macro Qmode'].velocity}
      SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer['gcode_macro Qmode'].square_corner_velocity}
      SET_PRESSURE_ADVANCE ADVANCE={printer['gcode_macro Qmode'].pressure_advance}
      M220 S{printer['gcode_macro Qmode'].speed_factor * 100}
      M106 P0 S{(printer['gcode_macro Qmode'].fan0_value * 255 + 0.5)|int}
      M106 P1 S{(printer['gcode_macro Qmode'].fan1_value * 255 + 0.5)|int}
      M106 P2 S{(printer['gcode_macro Qmode'].fan2_value * 255 + 0.5)|int}
      SET_TMC_FIELD STEPPER=stepper_x FIELD=en_spreadcycle VALUE=1
      SET_TMC_FIELD STEPPER=stepper_y FIELD=en_spreadcycle VALUE=1
      SET_GCODE_VARIABLE MACRO=Qmode VARIABLE=flag VALUE=0
    {% endif %}
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% if printer['gcode_macro Qmode'].flag|int == 0 %}
    {% set get_params = "" %}
    {% if 'S' in params|upper %}
      {% set get_params = (get_params + ' ' + 'S' + params.S) %}
    {% endif %}
    {% if 'P' in params|upper %}
      {% set get_params = (get_params + ' ' + 'P' + params.P) %}
    {% endif %}
    {% if 'T' in params|upper %}
      {% set get_params = (get_params + ' ' + 'T' + params.T) %}
    {% endif %}
    M204.1 {get_params}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M106]
gcode:
  {% set fans = printer["gcode_macro PRINTER_PARAM"].fans|int %}
  {% set fan = 0 %}
  {% set value = 255 %}
  {% if params.P is defined %}
    {% if fan < fans %}
      {% set fan = params.P|int %}
    {% endif %}
  {% endif %}
  {% if params.S is defined %}
    {% set value = params.S|int %}
  {% endif %}
  SET_PIN PIN=fan{fan} VALUE={value}
  {% if value == 0 %}
    SET_GCODE_VARIABLE MACRO=WAIT_TEMP_START VARIABLE=fan{fan}_flag VALUE=0
  {% endif %}

[gcode_macro M107]
gcode:
  {% if params.P is defined %}
    SET_PIN PIN=fan{params.P|int} VALUE=0
    SET_GCODE_VARIABLE MACRO=WAIT_TEMP_START VARIABLE=fan{params.P|int}_flag VALUE=0
  {% else %}
    SET_GCODE_VARIABLE MACRO=WAIT_TEMP_START VARIABLE=fan0_flag VALUE=0
    SET_GCODE_VARIABLE MACRO=WAIT_TEMP_START VARIABLE=fan2_flag VALUE=0
    SET_PIN PIN=fan0 VALUE=0
    SET_PIN PIN=fan2 VALUE=0
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[delayed_gcode wait_temp]
# initial_duration: 2.
gcode:
  {% set cur_temp = printer.extruder.temperature %}
  {% if cur_temp|int < 40 %}
    {action_respond_info("end_temp!\n")}
    # SET_PIN PIN=fan2 VALUE=0
    {% if printer["gcode_macro WAIT_TEMP_START"].fan0_flag == 1 %}
      M106 P0 S0
    {% endif %}
    {% if printer["gcode_macro WAIT_TEMP_START"].fan2_flag == 1 %}
      M106 P2 S0
    {% endif %}
    UPDATE_DELAYED_GCODE ID=wait_temp DURATION=0
  {% else %}
    {action_respond_info("cur_temp = %s \n" % (cur_temp))}
    # SET_PIN PIN=fan2 VALUE=255
    {% if printer["gcode_macro WAIT_TEMP_START"].fan0_flag == 1 %}
      M106 P0 S255
    {% endif %}
    {% if printer["gcode_macro WAIT_TEMP_START"].fan2_flag == 1 %}
      M106 P2 S255
    {% endif %}
    {% if (printer["gcode_macro WAIT_TEMP_START"].fan0_flag|int == 0) and (printer["gcode_macro WAIT_TEMP_START"].fan2_flag|int == 0) %}
      WAIT_TEMP_END
    {% else %}
      UPDATE_DELAYED_GCODE ID=wait_temp DURATION=5
    {% endif %}
  {% endif %}

[gcode_macro WAIT_TEMP_START]
gcode:
  {action_respond_info("wait temp start\n")}
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=1
  M106 P0 S255
  # M106 P2 S255

[gcode_macro WAIT_TEMP_END]
gcode:
  {action_respond_info("wait temp end\n")}
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=0
  M106 P0 S0
  # M106 P2 S0

[gcode_macro PRINT_CALIBRATION]
# This part of the command is replaced by the application side without passing parameters
gcode:
  CX_PRINT_LEVELING_CALIBRATION

[gcode_macro FIRST_FLOOR_PAUSE_POSITION]
gcode:
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  M104 S{extruder_temp}
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer['gcode_macro PRINTER_PARAM'].max_x_position|float + 1 %}
  G90
  G1 Z2 F600
  G1 X{x_park} Y{y_park} F6000
  G1 Z0.2 F600

[gcode_macro ACCURATE_G28]
gcode:
  ACCURATE_HOME_Z
[gcode_macro START_PRINT]
variable_prepare: 0
gcode:
  BOX_START_PRINT
  G90
  WAIT_TEMP_END
  CLEAR_PAUSE
  {% set g28_extruder_temp = printer.custom_macro.g28_ext_temp %}
  {% set bed_temp = printer.custom_macro.default_bed_temp %}
  {% set extruder_temp = printer.custom_macro.default_extruder_temp %}

  {% if 'BED_TEMP' in params|upper and (params.BED_TEMP|float) %}
    {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  {% if 'EXTRUDER_TEMP' in params|upper and (params.EXTRUDER_TEMP|float) %}
    {% set extruder_temp = params.EXTRUDER_TEMP %}
  {% endif %}

  {% if printer['gcode_macro START_PRINT'].prepare|int == 0 %}
    {action_respond_info("not prepare.\n")}
    PRINT_PREPARE_CLEAR
    CX_ROUGH_G28 EXTRUDER_TEMP={extruder_temp} BED_TEMP={bed_temp}
    CX_NOZZLE_CLEAR
    ACCURATE_G28
    CX_PRINT_LEVELING_CALIBRATION
  {% else %}
    PRINT_PREPARE_CLEAR
  {% endif %}

  CX_PRINT_DRAW_ONE_LINE

[gcode_macro PRINT_PREPARED]
gcode:
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=prepare VALUE=1
  {action_respond_info("print prepared")}

[gcode_macro PRINT_PREPARE_CLEAR]
gcode:
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=prepare VALUE=0

[gcode_macro END_PRINT_POINT_WITHOUT_LIFTING]
gcode:
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1.0 F180
      G1 E-{E} F4000
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    G1 Z2.0 F600
    G90
    {% set y_park = printer.toolhead.axis_maximum.y/2 %}
    {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
    G1 X{x_park} Y{y_park} F30000
  {% else %}
    {action_respond_info("end print xyz_axes is NULL\n")}
  {% endif %}
  M107 P1
[gcode_macro END_PRINT_POINT]
gcode:
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set z_safe = 0.0 %}
    {% if act_z < (max_z / 2) %}
      {% set z_safe = (max_z / 2) - act_z %}
    {% elif act_z < max_z %}
      {% set z_safe = 2.0 %}
    {% endif %}
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1.0 F180
      G1 E-{E} F4000
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    G1 Z2.0 F600
    G90
    {% set y_park = printer.toolhead.axis_maximum.y/2 %}
    {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
    G1 X{x_park} Y{y_park} F30000
    {% if z_safe > 2.0 %}
      G91
      {% set z_safe = z_safe - 2.0 %}
      G1 Z{z_safe} F600
      G90
    {% endif %}
  {% else %}
    {action_respond_info("end print xyz_axes is NULL\n")}
  {% endif %}

[gcode_macro END_PRINT]
gcode:
  END_PRINT_NO_M84
  M84

[gcode_macro END_PRINT_NO_M84]
gcode:
  BOX_END
  BOX_END_PRINT
  Qmode_exit
  EXCLUDE_OBJECT_RESET
  PRINT_PREPARE_CLEAR
  M220 S100
  SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=2500
  TURN_OFF_HEATERS
  M107 P1
  M107 P2
  END_PRINT_POINT
  WAIT_TEMP_START
  BOX_GET_FIVE_WAY_STATE

[gcode_macro FIRST_FLOOR_PAUSE]
description: Pause the first floor print
# change this if you need more or less extrusion
variable_extrude: 2.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro FIRST_FLOOR_PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set z_safe = 0.0 %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% elif act_z < max_z %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
  PAUSE_BASE
  G91
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1.0 F180
      G1 E-{E} F4000
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    G1 Z{z_safe} F600
    G90
    G1 X{x_park} Y{y_park} F30000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  # save fan2 value and turn off fan2
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=fan2_speed VALUE={printer['output_pin fan2'].value}
  {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
  {action_respond_info("fan2_value = %s \n" % (fspeed))}
  # SET_PIN PIN=fan2 VALUE=0
  M106 P2 S0
  SET_E_MIN_CURRENT

[gcode_macro BEDPID]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
[gcode_macro FIRST_FLOOR_RESUME]
description: Resume the first floor print
gcode:
  RESTORE_E_CURRENT
  {% if printer['gcode_macro PRINTER_PARAM'].fan2_speed > 0 %}
    # {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
    # {action_respond_info("fan2_value2 = %s \n" % (fspeed))}
    # SET_PIN PIN=fan2 VALUE={(printer['gcode_macro PRINTER_PARAM'].fan2_speed * 255 + 0.5)|int}
    {% set s_value = (printer['gcode_macro PRINTER_PARAM'].fan2_speed * 255 - printer['gcode_macro PRINTER_PARAM'].fan2_min) * 255 / (255 - printer['gcode_macro PRINTER_PARAM'].fan2_min)|float %}
    M106 P2 S{s_value}
  {% endif %}
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro FIRST_FLOOR_PAUSE"].extrude|float + 1.0 %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  M400
  RESUME_BASE {get_params}



[gcode_macro WAIT_PAUSE]
# change this if you need more or less extrusion
variable_extrude: 2.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro WAIT_PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set z_safe = 0.0 %}
  {% if act_z < 48.0 %}
    {% set z_safe = 50.0 - act_z %}
  {% elif act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% elif act_z < max_z %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  {action_respond_info("z_safe = %s"% (z_safe))}
  ##### end of definitions #####
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
  # PAUSE_BASE
  G91
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=hotend_temp VALUE={printer.extruder.target}
  M104 S140
  {% if "xyz" in printer.toolhead.homed_axes %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-1.0 F180
      G1 E-{E} F4000
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    G1 Z{z_safe} F600
    M400
    G90
    G1 X{x_park} Y{y_park} F30000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  # save fan2 value and turn off fan2
  SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=fan2_speed VALUE={printer['output_pin fan2'].value}
  {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
  {action_respond_info("fan2_value = %s \n" % (fspeed))}
  # SET_PIN PIN=fan2 VALUE=0
  M106 P2 S0
  SET_E_MIN_CURRENT 
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 2.0
gcode:
  {% if printer.pause_resume.is_paused|lower == 'false' %}
    ##### read E from pause macro #####
    # {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    # ##### set park positon for x and y #####
    # # default is your max posion from your printer.cfg
    # {% set y_park = printer.toolhead.axis_maximum.y/2 %}
    # {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
    # ##### calculate save lift position #####
    # {% set max_z = printer["gcode_macro PRINTER_PARAM"].max_z_position|float %}
    # {% set act_z = printer.toolhead.position.z|float %}
    # {% set z_safe = 0.0 %}
    # {% if act_z < 48.0 %}
    #   {% set z_safe = 50.0 - act_z %}
    # {% elif act_z < (max_z - 2.0) %}
    #   {% set z_safe = 2.0 %}
    # {% elif act_z < max_z %}
    #   {% set z_safe = max_z - act_z %}
    # {% endif %}
    # {action_respond_info("z_safe = %s"% (z_safe))}
    # ##### end of definitions #####
    # SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=z_safe_pause VALUE={z_safe|float}
    PAUSE_BASE
    {% if params.POST_WORK|default(1)|int == 1 %}
    DO_AFTER_PAUSE
    {% endif %}
    # G91
    # SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=hotend_temp VALUE={printer.extruder.target}
    # M104 S140
    # {% if "xyz" in printer.toolhead.homed_axes %}
    #   {% if printer.extruder.can_extrude|lower == 'true' %}
    #     G1 E-1.0 F180
    #     G1 E-{E} F4000
    #   {% else %}
    #     {action_respond_info("Extruder not hot enough")}
    #   {% endif %}
    #   G1 Z{z_safe} F600
    #   M400
    #   G90
    #   G1 X{x_park} Y{y_park} F30000
    # {% else %}
    #   {action_respond_info("Printer not homed")}
    # {% endif %}
    # # save fan2 value and turn off fan2
    # SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=fan2_speed VALUE={printer['output_pin fan2'].value}
    # {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
    # {action_respond_info("fan2_value = %s \n" % (fspeed))}
    # # SET_PIN PIN=fan2 VALUE=0
    # M106 P2 S0
    # SET_E_MIN_CURRENT
  {% endif %}

[gcode_macro INPUTSHAPER]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=filament_sensor_2 ENABLE=0
  G90
  G28
  {% set POSITION_X = printer.configfile.settings['stepper_x'].position_max/2 %}
  {% set POSITION_Y = printer.configfile.settings['stepper_y'].position_max/2 %}
  G1 X{POSITION_X} Y{POSITION_Y} F6000
  G1 Z10 F600
  SHAPER_CALIBRATE AXIS=y
  CXSAVE_CONFIG
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=filament_sensor_2 ENABLE=1

[gcode_macro BEDPID]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  SAVE_CONFIG

[gcode_macro TUNOFFINPUTSHAPER]
gcode:
  SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  BOX_ERROR_CLEAR
  RESTORE_E_CURRENT
  BOX_RESUME_EXTRUDE
  {% if printer['gcode_macro PRINTER_PARAM'].hotend_temp|int != 0 %}
    {% if printer['gcode_macro PRINTER_PARAM'].hotend_temp|int > printer.extruder.temperature %}
      M109 S{printer['gcode_macro PRINTER_PARAM'].hotend_temp|int}
    {% else %}
      M104 S{printer['gcode_macro PRINTER_PARAM'].hotend_temp|int}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=PRINTER_PARAM VARIABLE=hotend_temp VALUE=0
  {% endif %}
  {% if printer['gcode_macro PRINTER_PARAM'].fan2_speed > 0 %}
    # {% set fspeed = printer['gcode_macro PRINTER_PARAM'].fan2_speed %}
    # {action_respond_info("fan2_value2 = %s \n" % (fspeed))}
    # SET_PIN PIN=fan2 VALUE={(printer['gcode_macro PRINTER_PARAM'].fan2_speed * 255 + 0.5)|int}
    {% set s_value = (printer['gcode_macro PRINTER_PARAM'].fan2_speed * 255 - printer['gcode_macro PRINTER_PARAM'].fan2_min) * 255 / (255 - printer['gcode_macro PRINTER_PARAM'].fan2_min)|float %}
    M106 P2 S{s_value}
  {% endif %}

  # Y轴移动到安全位置，避免Z轴升降碰撞
  {% set safe_pos_y = printer.configfile.settings['box'].safe_pos_y %}
  {% set cur_y = printer.toolhead.position.y|float %}
  {action_respond_info("safe_pos_y = %f "% (safe_pos_y))}
  {action_respond_info("cur_y = %f" % (cur_y))}
  {% if cur_y > safe_pos_y %}
    G0 Y{safe_pos_y}
    M400
  {% endif %}

  {% set z_resume_move = printer['gcode_macro PRINTER_PARAM'].z_safe_pause|int %}
  {% if z_resume_move > 2 %}
    {% set z_resume_move = z_resume_move - 2 %}
    G91
    G1 Z-{z_resume_move} F600
    M400
  {% endif %}
  {action_respond_info("z_resume_move = %s"% (z_resume_move))}
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float + 1.0 %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' and printer.box.enable|int != 1 %}
    G91
    G1 E{E} F2100
    G90
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  M400
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  END_PRINT_NO_M84
  CANCEL_PRINT_BASE

[gcode_macro G29]
gcode:
  {% if 'PROBE_COUNT' in params|upper %}
    {% set get_count = ('PROBE_COUNT' + params.PROBE_COUNT) %}
  {%else %}
    {% set get_count = "" %}
  {% endif %}

  {% set bed_temp = printer.custom_macro.default_bed_temp %}
  {% set extruder_temp = printer.custom_macro.g28_ext_temp %}
  {% set nozzle_clear_temp = printer.custom_macro.default_extruder_temp %}

  {% if 'BED_TEMP' in params|upper %}
    {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  {% if 'EXTRUDER_TEMP' in params|upper %}
    {% set nozzle_clear_temp = params.EXTRUDER_TEMP %}
  {% endif %}
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=filament_sensor_2 ENABLE=0

  G28
  BED_MESH_CLEAR
  NOZZLE_CLEAR HOT_MIN_TEMP={extruder_temp} HOT_MAX_TEMP={nozzle_clear_temp} BED_MAX_TEMP={bed_temp}
  ACCURATE_G28
  M204 S5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000
  BED_MESH_CALIBRATE {get_count}
  BED_MESH_OUTPUT
  {% set y_park = printer.toolhead.axis_maximum.y/2 %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  G1 X{x_park} Y{y_park} F2000
  CXSAVE_CONFIG
  TURN_OFF_HEATERS
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=filament_sensor_2 ENABLE=1

  
[gcode_macro cut_material]
gcode:
    G28
    G1 X223.8 Y353 F2400
    G1 X223.8 Y370.5 F6000
    NEW_CLEAR
   
# [gcode_macro G299]
# gcode:
#     BED_MESH_CLEAR
#     G28
#     PRTOUCH_READY
#     BED_MESH_CALIBRATE
#     BED_MESH_OUTPUT
[gcode_macro M1499] ;È¥µ½°²È«Î»ÖÃ
[gcode_macro IF_NEED_HOME]
gcode:
  {% set x_axes = printer.toolhead.homed_axes %}
  {% if x_axes is defined and x_axes[0] is defined %}
    {action_respond_info(
        "x_axes: %s \n"
        % (x_axes))}
  {% else %}
    G28
  {% endif %}

[gcode_macro BOX_TEST_CLEAN]
gcode:
    #归零
    IF_NEED_HOME
    G0 Z100 F5000

    # 升温
    M104 S220
    M109 S220

    {% set count = 1 %}
    {% for i in range(count) %}

    # 移动到挤出位置
    G90
    G0 X164 F5000
    M400
    G0 Y226.5 F5000
    M400
    
    # 挤出吐料
    M83
    G1 E40 F300
    M400
    # 回抽
    G1 E-5 F600
    M400

    # 开风扇4s
    SET_PIN PIN=fan0 VALUE=128
    G4 P4000
    SET_PIN PIN=fan0 VALUE=0
    G4 P3000
    M400

    # 擦嘴
    SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=30000
    G90
    {% for _ in range(2) %}
    G0 X139 Y226 F2500
    G0 X164 Y226 F2500
    {% endfor %}
    G0 X131 Y226 F2500
    M400

    #回位
    G90
    G0 Y130 F6000
    M400
    G0 X164 F6000
    M400

    {% endfor %}

[gcode_macro BOX_TEST_CUT_MATERIAL_SCRIPT]
gcode:
    {% set count = 1 %}
    {% for i in range(count) %}
    
    #归零
    IF_NEED_HOME
    G0 Z100 F5000

    # 升温
    M104 S220
    M109 S220

    # 预装刀位置
    G90
    G0 Y180 F12000
    G0 X46 F12000

    # 挤出
    M83
    G1 E40 F300
    M400

    #M204 S3000
    SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=30000
    {% for _ in range(3) %}
    G0 X46 Y227.2 F12000
    G0 X46 Y180 F12000
    {% endfor %}


    M400
    {% endfor %}
;    #{action_respond_info(i.__str__()) }

[gcode_macro BOX_TEST_CUT_AND_CLEAN]
gcode:
    {% set count = 1 %}
    {% for i in range(count) %}
    BOX_TEST_CUT_MATERIAL_SCRIPT
    BOX_TEST_CLEAN

    M400
    {% endfor %}
;    #{action_respond_info(i.__str__()) }


[gcode_macro BOX_TEST_TNNX]
gcode:
    {% set count = 4 %}
    {% for i in range(count) %}
    T{i%4}
    M400
    {% endfor %}
;    #{action_respond_info(i.__str__()) }


[gcode_macro EXTRUDE_TEST]
gcode:
  M104 S220
  {% set times = params.TIMES|default(1)|int %}
  {% for _ in range(times) %}
    BOX_MOVE_TO_CUT
    BOX_GO_TO_EXTRUDE_POS
    G91
    G0 E100 F360
    G90
    M400
    # BOX_BLOW
    SET_PIN PIN=fan0 VALUE=255
    G4 P4000
    SET_PIN PIN=fan0 VALUE=0
    M400
    BOX_NOZZLE_CLEAN
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
  M1800
[gcode_macro TEST_HOME]
gcode:
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
    G28
